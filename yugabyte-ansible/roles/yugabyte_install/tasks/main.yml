- name: Ensure yugabyte_home directory exists
  file:
    path: "{{ yugabyte_home }}"
    state: directory
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    mode: '0755'

- name: Check if YugabyteDB systemd service file exists
  stat:
    path: "{{ yugabyte_service_file }}"
  register: yugabytedb_service_file

- name: Create YugabyteDB systemd service file if missing
  template:
    src: yugabytedb.service.j2
    dest: "{{ yugabyte_service_file }}"
  when: not yugabytedb_service_file.stat.exists
  notify: Reload systemd

- name: Check if post-install script exists
  stat:
    path: "{{ yugabyte_post_install_script }}"
  register: post_install_check

- name: Run post-installation script if exists
  command: "{{ yugabyte_post_install_script }}"
  args:
    chdir: "{{ yugabyte_extract_dir }}"
  when: post_install_check.stat.exists

- name: Check if YugabyteDB is running
  command: pgrep -f yugabyted
  register: yugabyted_pid
  ignore_errors: true

- name: Install YugabyteDB if not present
  block:

    - name: Check if YugabyteDB is already installed
      stat:
        path: "{{ yugabyte_bin }}/yugabyted"
      register: yugabyte_installed

    - name: Download YugabyteDB tarball if not present
      get_url:
        url: "https://software.yugabyte.com/releases/{{ yugabyte_version }}/{{ yugabyte_tarball }}"
        dest: "{{ yugabyte_home }}/{{ yugabyte_tarball }}"
        mode: '0644'
      when: not yugabyte_installed.stat.exists

    - name: Extract YugabyteDB tarball
      unarchive:
        src: "{{ yugabyte_home }}/{{ yugabyte_tarball }}"
        dest: "{{ yugabyte_home }}"
        remote_src: yes
        owner: "{{ userId }}"
        group: "{{ groupId }}"
      when: not yugabyte_installed.stat.exists

    - name: Remove YugabyteDB tarball after extraction
      file:
        path: "{{ yugabyte_home }}/{{ yugabyte_tarball }}"
        state: absent
      when: not yugabyte_installed.stat.exists

    - name: Fix permissions for openssl-config
      file:
        path: "{{ yugabyte_extract_dir }}/openssl-config"
        owner: "{{ userId }}"
        group: "{{ groupId }}"
        mode: "u+w"
        recurse: yes

- name: Start YugabyteDB service if not running
  command: "{{ yugabyte_bin }}/yugabyted start"
  args:
    chdir: "{{ yugabyte_extract_dir }}"
  when: yugabyted_pid.rc != 0

- name: Check YugabyteDB service status
  command: "{{ yugabyte_bin }}/yugabyted status"
  register: yugabyte_status
  changed_when: false

- name: Show YugabyteDB status
  debug:
    msg: "{{ yugabyte_status.stdout }}"
